@using WelliDO.APIResponses
@model PickerModel
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@{
    ViewBag.Title = "Nearby Options";
    var radiusAsString = PickerModel.RadiusToMileParser(PickerModel.Radius).ToString();
    List<PlaceResult> places = PickerModel.Places;
    
}



@*<h1 class="text-center">This is where Food will go</h1>*@
<h2 class="text-center">Here is a list of places within @radiusAsString miles of you</h2>




@foreach (var place in places)
{
    if (place != null)
    {
        <div class="card" style="width: 50rem;">
            <!--Accordion wrapper-->
            <div class="accordion md-accordion" id="accordionEx" role="tablist" aria-multiselectable="true">
                <!-- Accordion card -->
                <div class="card">
                    <div cardcheckbox id="checkboxdiv">
                        <input type="checkbox" class="cardcheckbox" id="checkid" align="right" onclick="toggleBoxVisibility()" />
                    </div>
                    <div class="well text-center">
                        <div class="col-md-12">@place.name:</div>
                        <div class="row">
                            <div id="carouselExampleControls" class="carousel slide" data-ride="carousel">
                                
                                <div class="carousel-inner">
                                    @if (place.photos != null)
                                    {
                                         <div class="carousel-item active">
                                                <a href="#"><img class="img-fluid" src="@PickerModel.GetPhotoURL(place.photos[0].photo_reference)" /></a>
                                            </div>
                                        @for (int i = 1; i < place.photos.Length; i++)
                                        {
                                          <div class="carousel-item">
                                                <a href="#"><img class="img-fluid" src="@PickerModel.GetPhotoURL(place.photos[i].photo_reference)" /></a>
                                            </div>  
                                        }
                                    }
                                    else
                                    {
                                        <div class="carousel-item active">
                                            <a href="#"><img class="img-fluid" src="https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/2048px-No_image_available.svg.png" /></a>
                                        </div>
                                    }
                                </div>
                                <a class="carousel-control-prev" href="#carouselExampleControls" role="button" data-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Previous</span>
                                </a>
                                <a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Next</span>
                                </a>
                            </div>




                        </div>
                    </div>
                    <!-- Card header -->
                    <div class="card-header" role="tab" id="headingOne1">
                        <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordionEx" href="#collapseOne1" aria-expanded="true" aria-controls="collapseOne1">
                            Tree
                        </a>
                    </div>
                    <!-- Card body -->
                    <div id="collapseOne1" class="collapse" role="tabpanel" aria-labelledby="headingOne1" data-parent="#accordionEx">
                        <div class="card-body">
                            Oak Tree with leaves in grassy picture with sunset
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}

@*foreach (var place in PickerModel.Results);
{
    <div class="card" style="width: 18rem;">
        <img class="card-img-top" src="@place." alt="Card image cap">
        <div class="card-body">
            <h5 class="card-title">Card title</h5>
            <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
            <a href="#" class="btn btn-primary">Go somewhere</a>
        </div>
    </div>
}*@

